--TEST--
Test "start" is ignored when "linenos" is "false"
--TEMPLATE--
{% codeblock lang:"php" linenos:false start:12 %}
<?php
namespace Foo;

/**
 * Awesome Contrived Example.
 */
class Bar implements BarInterface
{
    private $baz;

    public function __construct(BazInterface $baz)
    {
        $this->baz = $baz;
    }

    public function doIt()
    {
        return $this->baz->do('it');
    }
}
{% endcodeblock %}
--DATA--
return []
--EXPECT--
<figure class="code-highlight-figure"><div class="highlight"><pre><span></span><span class="cp">&lt;?php</span>
<span class="k">namespace</span> <span class="nx">Foo</span><span class="p">;</span>

<span class="sd">/**</span>
<span class="sd"> * Awesome Contrived Example.</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">Bar</span> <span class="k">implements</span> <span class="nx">BarInterface</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$baz</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">BazInterface</span> <span class="nv">$baz</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">baz</span> <span class="o">=</span> <span class="nv">$baz</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">doIt</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">baz</span><span class="o">-&gt;</span><span class="na">do</span><span class="p">(</span><span class="s1">&#39;it&#39;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</figure>
